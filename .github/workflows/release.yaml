name: Release 

permissions:
  contents: write

on:
  push:
    tags: [ 'v*' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x64
            runs-on: ubuntu-24.04
          #- arch: arm64
          #  runs-on: ubuntu-24.04-arm

    name: linux-${{#mustacheCase}} matrix.arch ${{/mustacheCase}}
    runs-on: ${{#mustacheCase}} matrix.runs-on ${{/mustacheCase}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install build dependencies
        run: |
          cd packages/{{project_name.snakeCase()}}
          sudo apt-get update
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev curl git

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter init
        run: |
          cd packages/{{project_name.snakeCase()}}
          flutter --version
          flutter doctor -v
          flutter config --enable-linux-desktop
          flutter pub get

      - name: Flutter tests
        run: |
          cd packages/{{project_name.snakeCase()}}
          flutter test --dart-define="ignore-goldens=true"

      - name: Build Linux (release)
        run: |
          tag="${{#mustacheCase}} github.ref_name ${{/mustacheCase}}"
          build_name=${tag#"v"}
          build_number="${{#mustacheCase}} github.run_id ${{/mustacheCase}}"
          cd packages/{{project_name.snakeCase()}}
          flutter build linux --release --build-name $build_name --build-number $build_number

      - name: Create archive
        run: |
          cd packages/{{project_name.snakeCase()}}/build/linux/${{#mustacheCase}} matrix.arch ${{/mustacheCase}}/release/bundle/
          tar -czf {{executable_name}}-${{#mustacheCase}} github.ref_name }}-${{#mustacheCase}} matrix.arch ${{/mustacheCase}}.tar.gz {{executable_name}} lib data
          mv {{executable_name}}-${{#mustacheCase}} github.ref_name }}-${{#mustacheCase}} matrix.arch ${{/mustacheCase}}.tar.gz ../../../../../../../

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: {{executable_name}}-${{#mustacheCase}} matrix.arch ${{/mustacheCase}}
          path: {{executable_name}}-${{#mustacheCase}} github.ref_name }}-${{#mustacheCase}} matrix.arch ${{/mustacheCase}}.tar.gz

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Generate changelog
      run: |
        # Get previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

        # Generate changelog
        echo "# Changes in {{project_name.snakeCase()}}" > CHANGELOG.md
        echo "" >> CHANGELOG.md

        if [ -n "$PREV_TAG" ]; then
          echo "## Commits since $PREV_TAG:" >> CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
        else
          echo "## All commits:" >> CHANGELOG.md
          git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
        fi

        echo "" >> CHANGELOG.md
        echo "## Downloads:" >> CHANGELOG.md
        echo "- [{{executable_name}}-${{#mustacheCase}} github.ref_name ${{/mustacheCase}}-x64.tar.gz](https://github.com/${{#mustacheCase}} github.repository ${{/mustacheCase}}/releases/download/${{#mustacheCase}} github.ref_name ${{/mustacheCase}}/{{executable_name}}-${{#mustacheCase}} github.ref_name ${{/mustacheCase}}-x64.tar.gz) - x64" >> CHANGELOG.md

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          omarchy_calculator-x64/{{executable_name}}-${{#mustacheCase}} github.ref_name ${{/mustacheCase}}-x64.tar.gz
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{#mustacheCase}} contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') ${{/mustacheCase}}
      env:
        GITHUB_TOKEN: ${{#mustacheCase}} secrets.GITHUB_TOKEN ${{/mustacheCase}}
